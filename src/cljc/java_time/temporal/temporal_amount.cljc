(ns cljc.java-time.temporal.temporal-amount (:require [cljs.java-time.interop :as jti] #? (:cljs [java.time.temporal :refer [TemporalAmount]])) (:refer-clojure :exclude [get range format min max next name resolve]) #? (:clj (:import [java.time.temporal TemporalAmount])))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.TemporalAmount this3108 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit3109] (.get this3108 java-time-temporal-TemporalUnit3109)))
(clojure.core/defn get-units {:arglists (quote (["java.time.temporal.TemporalAmount"]))} (^java.util.List [^java.time.temporal.TemporalAmount this3110] (jti/getter units this3110)))
(clojure.core/defn add-to {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this3111 ^java.time.temporal.Temporal java-time-temporal-Temporal3112] (.addTo this3111 java-time-temporal-Temporal3112)))
(clojure.core/defn subtract-from {:arglists (quote (["java.time.temporal.TemporalAmount" "java.time.temporal.Temporal"]))} (^java.time.temporal.Temporal [^java.time.temporal.TemporalAmount this3113 ^java.time.temporal.Temporal java-time-temporal-Temporal3114] (.subtractFrom this3113 java-time-temporal-Temporal3114)))
