(ns cljc.java-time.temporal.temporal (:require [cljs.java-time.interop :as jti] #? (:cljs [java.time.temporal :refer [Temporal]])) (:refer-clojure :exclude [get range format min max next name resolve]) #? (:clj (:import [java.time.temporal Temporal])))
(clojure.core/defn range {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.time.temporal.ValueRange [^java.time.temporal.Temporal this13960 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13961] (.range this13960 java-time-temporal-TemporalField13961)))
(clojure.core/defn plus {:arglists (quote (["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this13962 ^long long13963 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit13964] (.plus this13962 long13963 java-time-temporal-TemporalUnit13964)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this13965 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount13966] (.plus this13965 java-time-temporal-TemporalAmount13966)))
(clojure.core/defn query {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalQuery"]))} (^java.lang.Object [^java.time.temporal.Temporal this13967 ^java.time.temporal.TemporalQuery java-time-temporal-TemporalQuery13968] (.query this13967 java-time-temporal-TemporalQuery13968)))
(clojure.core/defn minus {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAmount"] ["java.time.temporal.Temporal" "long" "java.time.temporal.TemporalUnit"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this13969 ^java.time.temporal.TemporalAmount java-time-temporal-TemporalAmount13970] (.minus this13969 java-time-temporal-TemporalAmount13970)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this13971 ^long long13972 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit13973] (.minus this13971 long13972 java-time-temporal-TemporalUnit13973)))
(clojure.core/defn get-long {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^long [^java.time.temporal.Temporal this13974 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13975] (.getLong this13974 java-time-temporal-TemporalField13975)))
(clojure.core/defn until {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"]))} (^long [^java.time.temporal.Temporal this13976 ^java.time.temporal.Temporal java-time-temporal-Temporal13977 ^java.time.temporal.TemporalUnit java-time-temporal-TemporalUnit13978] (.until this13976 java-time-temporal-Temporal13977 java-time-temporal-TemporalUnit13978)))
(clojure.core/defn is-supported {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalUnit"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Boolean [this13979 G__13980] #? (:cljs (.isSupported ^java.time.temporal.Temporal this13979 G__13980) :clj (clojure.core/cond (clojure.core/and (clojure.core/instance? (java.lang.Class/forName "java.time.temporal.TemporalUnit") G__13980)) (clojure.core/let [G__13980 ^"java.time.temporal.TemporalUnit" G__13980] (.isSupported ^java.time.temporal.Temporal this13979 G__13980)) (clojure.core/and (clojure.core/instance? (java.lang.Class/forName "java.time.temporal.TemporalField") G__13980)) (clojure.core/let [G__13980 ^"java.time.temporal.TemporalField" G__13980] (.isSupported ^java.time.temporal.Temporal this13979 G__13980)) :else (throw (java.lang.IllegalArgumentException. "no corresponding java.time method with these args"))))))
(clojure.core/defn with {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalAdjuster"] ["java.time.temporal.Temporal" "java.time.temporal.TemporalField" "long"]))} (^java.time.temporal.Temporal [^java.time.temporal.Temporal this13981 ^java.time.temporal.TemporalAdjuster java-time-temporal-TemporalAdjuster13982] (.with this13981 java-time-temporal-TemporalAdjuster13982)) (^java.time.temporal.Temporal [^java.time.temporal.Temporal this13983 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13984 ^long long13985] (.with this13983 java-time-temporal-TemporalField13984 long13985)))
(clojure.core/defn get {:arglists (quote (["java.time.temporal.Temporal" "java.time.temporal.TemporalField"]))} (^java.lang.Integer [^java.time.temporal.Temporal this13986 ^java.time.temporal.TemporalField java-time-temporal-TemporalField13987] (.get this13986 java-time-temporal-TemporalField13987)))
